//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HRMS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HRMSEntities : DbContext
    {
        public HRMSEntities()
            : base("name=HRMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TB_ATTANDANCE> TB_ATTANDANCE { get; set; }
        public virtual DbSet<TB_BENEFIT> TB_BENEFIT { get; set; }
        public virtual DbSet<TB_DEPARTMENT> TB_DEPARTMENT { get; set; }
        public virtual DbSet<TB_EMPLOYEE> TB_EMPLOYEE { get; set; }
        public virtual DbSet<TB_EMPLOYEE_PROJECT> TB_EMPLOYEE_PROJECT { get; set; }
        public virtual DbSet<TB_EMPLOYEE_ROLE> TB_EMPLOYEE_ROLE { get; set; }
        public virtual DbSet<TB_JOB_POSITION> TB_JOB_POSITION { get; set; }
        public virtual DbSet<TB_LEAVE_MANAGEMENT> TB_LEAVE_MANAGEMENT { get; set; }
        public virtual DbSet<TB_PAYROLL> TB_PAYROLL { get; set; }
        public virtual DbSet<TB_PERFOMANCE_EVALUATION> TB_PERFOMANCE_EVALUATION { get; set; }
        public virtual DbSet<TB_PROJECTS> TB_PROJECTS { get; set; }
        public virtual DbSet<TB_RECRUITMENT> TB_RECRUITMENT { get; set; }
        public virtual DbSet<TB_ROLE> TB_ROLE { get; set; }
        public virtual DbSet<TB_TRANING_AND_DEVELOPMENT> TB_TRANING_AND_DEVELOPMENT { get; set; }
        public virtual DbSet<TB_USER> TB_USER { get; set; }
    
        public virtual int SP_INSERT_EMP(string first_name, string last_name, Nullable<System.DateTime> date_of_birth, Nullable<int> gender, string email, string phone, string address, Nullable<int> department_id, Nullable<int> job_position_id, Nullable<System.DateTime> date_of_joining, Nullable<int> employment_status, Nullable<int> supervisor_id)
        {
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var date_of_birthParameter = date_of_birth.HasValue ?
                new ObjectParameter("date_of_birth", date_of_birth) :
                new ObjectParameter("date_of_birth", typeof(System.DateTime));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var department_idParameter = department_id.HasValue ?
                new ObjectParameter("department_id", department_id) :
                new ObjectParameter("department_id", typeof(int));
    
            var job_position_idParameter = job_position_id.HasValue ?
                new ObjectParameter("job_position_id", job_position_id) :
                new ObjectParameter("job_position_id", typeof(int));
    
            var date_of_joiningParameter = date_of_joining.HasValue ?
                new ObjectParameter("date_of_joining", date_of_joining) :
                new ObjectParameter("date_of_joining", typeof(System.DateTime));
    
            var employment_statusParameter = employment_status.HasValue ?
                new ObjectParameter("employment_status", employment_status) :
                new ObjectParameter("employment_status", typeof(int));
    
            var supervisor_idParameter = supervisor_id.HasValue ?
                new ObjectParameter("supervisor_id", supervisor_id) :
                new ObjectParameter("supervisor_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_EMP", first_nameParameter, last_nameParameter, date_of_birthParameter, genderParameter, emailParameter, phoneParameter, addressParameter, department_idParameter, job_position_idParameter, date_of_joiningParameter, employment_statusParameter, supervisor_idParameter);
        }
    
        public virtual ObjectResult<SPEMPLOYEE_OVERVIEW_Result> SPEMPLOYEE_OVERVIEW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPEMPLOYEE_OVERVIEW_Result>("SPEMPLOYEE_OVERVIEW");
        }
    
        public virtual ObjectResult<SP_GET_EMPLOYEE_Result> SP_GET_EMPLOYEE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_EMPLOYEE_Result>("SP_GET_EMPLOYEE");
        }
    }
}
